openapi: 3.0.0

info:
  title: BexJobs API

  contact: {}

  version: '1.0'

servers:
  - url: https://bex-jobs-api.onrender.com/api/v1

    variables: {}

paths:
  /auth/register:
    post:
      tags:
        - auth

      summary: register

      operationId: register

      parameters:
        - name: Accept

          in: header

          description: ''

          required: true

          style: simple

          schema:
            type: string

            example: application/json

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registerrequest'

                - example:
                    firstName: enoch

                    lastName: gybex

                    email: don@gmail.com

                    password: top-secret

                    passwordConfirm: top-secret

            example:
              firstName: enoch

              lastName: gybex

              email: don@gmail.com

              password: top-secret

              passwordConfirm: top-secret

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security: []

  /auth/login:
    post:
      tags:
        - auth

      summary: login

      operationId: login

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/loginrequest'

                - example:
                    email: don@gmail.com

                    password: top-secret

            example:
              email: don@gmail.com

              password: top-secret

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security: []

  /auth/get-user:
    get:
      tags:
        - auth

      summary: get user

      operationId: getuser

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /auth/update-user:
    patch:
      tags:
        - auth

      summary: update user

      operationId: updateuser

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateuserrequest'

                - example:
                    firstName: enock

                    lastName: gybex

                    email: don@gmail.com

            example:
              firstName: enock

              lastName: gybex

              email: don@gmail.com

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs:
    post:
      tags:
        - job

      summary: create job

      operationId: createjob

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createjobrequest'

                - example:
                    company: 'Bex Solutions'

                    jobPosition: 'Senior Marketing Analyst'

                    jobLocation: 'Bex City'

            example:
              company: 'Bex Solutions'

              jobPosition: 'Senior Marketing Analyst'

              jobLocation: 'Bex City'

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    get:
      tags:
        - job

      summary: get jobs

      operationId: getjobs

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    delete:
      tags:
        - job

      summary: delete jobs

      operationId: deletejobs

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/{jobID}:
    get:
      tags:
        - job

      summary: get job

      operationId: getjob

      parameters:
        - name: jobID

          in: path

          description: ''

          required: true

          style: simple

          schema:
            type: string

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    patch:
      tags:
        - job

      summary: update job

      operationId: updatejob

      parameters:
        - name: jobID

          in: path

          description: ''

          required: true

          style: simple

          schema:
            type: string

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updatejobrequest'

                - example:
                    company: 'Bex Solutions'

                    jobPosition: 'Senior Marketing Analyst'

                    jobLocation: 'Bex City'

                    jobType: remote

                    jobStatus: declined

            example:
              company: 'Bex Solutions'

              jobPosition: 'Senior Marketing Analyst'

              jobLocation: 'Bex City'

              jobType: remote

              jobStatus: declined

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    delete:
      tags:
        - job

      summary: delete job

      operationId: deletejob

      parameters:
        - name: jobID

          in: path

          description: ''

          required: true

          style: simple

          schema:
            type: string

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/stats:
    get:
      tags:
        - job

      summary: get stats

      operationId: getstats

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

components:
  schemas:
    registerrequest:
      title: registerrequest

      required:
        - firstName

        - lastName

        - email

        - password

        - passwordConfirm

      type: object

      properties:
        firstName:
          type: string

        lastName:
          type: string

        email:
          type: string

        password:
          type: string

        passwordConfirm:
          type: string

      example:
        firstName: enoch

        lastName: gybex

        email: don@gmail.com

        password: top-secret

        passwordConfirm: top-secret

    loginrequest:
      title: loginrequest

      required:
        - email

        - password

      type: object

      properties:
        email:
          type: string

        password:
          type: string

      example:
        email: don@gmail.com

        password: top-secret

    updateuserrequest:
      title: updateuserrequest

      required:
        - firstName

        - lastName

        - email

      type: object

      properties:
        firstName:
          type: string

        lastName:
          type: string

        email:
          type: string

      example:
        firstName: enock

        lastName: gybex

        email: don@gmail.com

    createjobrequest:
      title: createjobrequest

      required:
        - company

        - jobPosition

        - jobLocation

      type: object

      properties:
        company:
          type: string

        jobPosition:
          type: string

        jobLocation:
          type: string

      example:
        company: 'Bex Solutions'

        jobPosition: 'Senior Marketing Analyst'

        jobLocation: 'Bex City'

    updatejobrequest:
      title: updatejobrequest

      required:
        - company

        - jobPosition

        - jobLocation

        - jobType

        - jobStatus

      type: object

      properties:
        company:
          type: string

        jobPosition:
          type: string

        jobLocation:
          type: string

        jobType:
          type: string

        jobStatus:
          type: string

      example:
        company: 'Bex Solutions'

        jobPosition: 'Senior Marketing Analyst'

        jobLocation: 'Bex City'

        jobType: remote

        jobStatus: declined

  securitySchemes:
    bearer:
      type: http

      scheme: bearer

security: []

tags:
  - name: auth

  - name: job
